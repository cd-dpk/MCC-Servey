DROP TABLE IF EXISTS ORDERS;
DROP TABLE IF EXISTS PRODUCT;
DROP TABLE IF EXISTS INVOICE;
DROP TABLE IF EXISTS CATEGORY;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS ADMIN_USER;
CREATE TABLE USER (PHONE VARCHAR(11) NOT NULL,  NAME VARCHAR(20) NOT NULL,  EMAIL VARCHAR(20) NOT NULL,  ADDRESS VARCHAR(30) NOT NULL, PHOTOID VARCHAR(15) NOT NULL, primary key (PHONE));
CREATE TABLE CATEGORY ( CATEGORY_ID INTEGER AUTO_INCREMENT PRIMARY KEY, CATEGORY_NAME VARCHAR (15));
CREATE TABLE PRODUCT (PRODUCT_ID INTEGER AUTO_INCREMENT PRIMARY KEY, PRODUCT_PHOTO_URL VARCHAR(20), CATEGORY_ID INTEGER, PRODUCT_NAME VARCHAR(20), PRODUCT_DESCRIPTION VARCHAR(30), PRICE INTEGER, SPECIAL_PRICE INTEGER, QUANTITY INTEGER,ENTRY_TIME TIMESTAMP, FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (CATEGORY_ID)) 
CREATE TABLE INVOICE (INVOICE_ID INT(11) NOT NULL PRIMARY KEY,NAME VARCHAR(15) NOT NULL,EMAIL VARCHAR(15) NOT NULL,PHONE VARCHAR(15) NOT NULL,ADDRESS VARCHAR(25) NOT NULL,INVOICE_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,INVOICE_STATUS TINYINT(1) NOT NULL, TOTAL_PRICE INT(11) NOT NULL);
CREATE TABLE ORDERS (ORDER_ID INTEGER AUTO_INCREMENT PRIMARY KEY,INVOICE_ID INTEGER ,PRODUCT_ID INTEGER, ORDER_DES VARCHAR(30), QUANTITY INTEGER,  FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE (INVOICE_ID), FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID));
CREATE TABLE ADMIN_USER (ADMIN_USER_NAME VARCHAR(20) , ADMIN_USER_PASS VARCHAR(15) , PRIMARY KEY (ADMIN_USER_NAME, ADMIN_USER_PASS));